native JSON;
native $;
native Math;
native String;

$Screen.resize(540,810);
$Screen.setBGColor("#ddddaa");
$timeFrame=0;//経過時間（フレーム数）
$Boot.setFrameRate(60);
$turn=0;
$miss=0;
$time=0;
$changeSum=0;
$qnum=0;
clear=0;
setMessage();

let today = new Date();
let year = today.getFullYear();
let month = ('0' + (today.getMonth() + 1)).slice(-2);
let day = ('0' + today.getDate()).slice(-2);
$ymd= year+''+month+''+day;
//makeQ($ymd);
//$fs=file("../static/wikiMatch"+$ymd+".csv");
$fs=file("../static/wikiMatch.csv");
$ymd="";
if($repeat != 1){
    makeQ($ymd);
}
setDay();

$wikiWord="Wikipedian神経衰弱";
$ft=file("../static/setumei.txt");
// ファイル読み込み時
$wikiSummary=$ft.text();
$turnO=new Label{x:430,y:20,size=24,align=left,
fillStyle="Black",template:"手数:$turn" };
//$timeO=new Label{x:310,y:20,size=24,align=left,
//fillStyle="Black",template:"時間:$time" };
//$QNumber=new Label{x:90,y:20,size=24,align=left,
//fillStyle="Black",template:"問題番号:$qnum" };
//$yyyymmdd=new Button{x:470,y:785,width=70,height=28,size=28,align=right,
//fillStyle="#ddddaa",onClick:input,text:$ymd };
$content=["div",{name:"summary",style:"background:white;overflow-y: scroll;"},
["h3", $wikiWord],["p",$wikiSummary]];

$summay= new HTMLUI{content=$content, left=40,
top=510, width=462, height=250};

while(true){
    prepear();
    while(true){
        $timeFrame++;
        $time=floor($timeFrame/($Boot.getFrameRate()*0.5));
        //print ($select.length);
        if($select.length>=1 && $changeSum==1){
            $summay.die();
            $content=["div",{style:"background:white;overflow-y: scroll;"},
            ["h3", $wikiWord],["a",{href:"https://ja.wikipedia.org/wiki/"+$wikiWord},"https://ja.wikipedia.org/wiki/"+$wikiWord],["p",{name:"summary"},$wikiSummary]];
        //print ($wikiSummary);
        //$summay.setValue("summary", $wikiSummary);
        //$summay.setValue("summary", "aaa");
            $summay= new HTMLUI{content=$content, left=29,
            top=510, width=462, height=250};
            $changeSum=0;
        }
        
        if($select.length ==2 && $clickable == 1){
//print ("2clicks");
            if($select[0] == $select[1]){
                $select.length=1;
            }else{
                $clickable=0;
                $startFrame = $timeFrame;
            }
        }
    //print ($timeFrame);
    //print("Match!!!!!");
                //print("-----------");
        if($clickable == 0){
            if($b[$select[0]].myUra == $b[$select[1]].myUra ){
                //print(nextOmote);
                $b[$select[0]].vx=$b[$select[1]].x;
                $b[$select[0]].vy=$b[$select[1]].y;
                $b[$select[0]].mode=4;
                $b[$select[0]].zOrder=-1;
            }       
        }

        if( $timeFrame- $startFrame >= 0.5*$Boot.getFrameRate() && $clickable==0)
        {
            if($b[$select[0]].myUra != $b[$select[1]].myUra){
            //print("NoMatch");
                $b[$select[0]].mode=2;
                $b[$select[1]].mode=2;
                $miss+=1;
            }else{
                nextOmote = Number($b[$select[1]].ura)+($qnum*31);
                $b[$select[1]].omote=$questions.get(nextOmote,0);
                //print($questions.get(nextOmote,0));
                $b[$select[1]].ura=$questions.get(nextOmote,1);
                //print($questions.get(nextOmote,1));
                $b[$select[1]].myOmote=$questions.get(nextOmote,2);
            //print($questions.get(nextOmote,2));
                $b[$select[1]].myUra=$questions.get(nextOmote,3);
                //print($questions.get(nextOmote,3));
                $b[$select[1]].mySum=$questions.get(nextOmote,4);
                $b[$select[1]].mode=3;

            }
            $clickable=1;
            $select.length=[];
            $select.length=0;
            $turn++;
        }
        a=all(Card);
        //print("カード=", a[0].mode);
        if(a.length==1 && a[0].mode==1 && $clickable==1){
            //print("WellDone!");
            //$startFrame = $timeFrame;
            a[0].vx=250;
            a[0].vy=-50;
            a[0].mode=4;
            break;
        }
        wait(1);
    }
    
    //$DoneO=new Label{x:250,y:300,size=64,
    //fillStyle="Black",template:"Well Done！" };

    maxv=$dur[0];
    maxi=0;
    for(i=1;i<31;i++){
        if (maxv < $dur[i]){
            maxv=$dur[i];
            maxi=i;
        }
    }
    $fav=$questions.get(maxi,2);
    $cl=new Label{template="クリア：$turn手、ミス：$miss手\n\nあなたのお気に入りは\n「$fav」\n　でした。",x=270,y=150,size=24,fillStyle="Black"};
    $cl=new Label{template="今回のお題は\n「$wikiWord」\nでした。",x=270,y=50,size=32,fillStyle="Black"};
    $br = new Button{
        text="別の問題をする",
        top=340,
        left=30,
        onClick=goTitle,
    };

    $br = new Button{
        text="もう一度同じ問題をする",
        top=280,
        left=30,
        onClick=goRepeatTitle,
    };
    
// ★Tweetボタン
    $mesg="ウィキペディアン神経衰弱を"+$turn+"手でクリアしたよ。お題は「"+$wikiWord+"」お気に入りは「"+$fav+"」でした。";
    bt=new Button{
        text="Tweet",
        top=400,
        left=30,
        onClick=tweet
    };

    while(true){}
}

\goTitle() {
    $repeat=0;
    clear=3;
    $br.die();
    $cl.die();
    //bt.die();
    clear=0;
    loadPage(Main);
}

\goRepeatTitle() {
    $repeat=1;
    clear=3;
    $br.die();
    $cl.die();
    //bt.die();
    clear=0;
    loadPage(Main);
}
// ★Tweetするメソッド
\tweet() {
    $WebPage.openShareTweet($mesg, $url, "Wiki神,tonyu2");
    //clear=2;
}

\input(){
    parallel(dialog);
}

\dialog(){
    $ymd1 = waitInput("","",$ymd);
    $ymd= $InputBox.getText();
    //new prompt(mesg="yyyymmdd",val=$ymd,);
    print($ymd);
    
    $fs=file("../static/wikiMatch"+$ymd+".csv");
    if ($fs.exists() == false){
        //$fs=file("../static/wikiMatch.csv");
        print("今日の問題がないので作成します");
        makeQ($ymd);
    }

    setDay();
    all(Card).die();
    all(Moji).die();
    all(MojiUra).die();
    prepear();
}

\setDay(){
    //print("../static/wikiMatch"+$ymd+".csv");
// ファイル読み込み時
    ctt=$fs.text();
    $questions=new Matrix;
    q=ctt.split("\n");
//print(q[1]);
    l=0;
    for (line in q){
        c=0;
    //if (l %3 != 0){continu;}
        ln = floor(l / 3);
        words=line.split(",");
        if(words.length>4){
            for (i=5;i<words.length;i++)
            words[4]+=words[i];
        }
        if(words.length < 1){continue;}
        for(w in words){
            if (w.length < 1){continue;}
        //print(ln,c,w);
            $questions.set(ln,c,w);
            c++;
        }
        l++;
    }

    $dur=[];
    for( i = 0; i<31; i++){
        $questions.set(i,0,i);
        $dur.push(0);
    //print ($questions.get(i,0));
    }
/*
print ($questions.get(30,0));
print ($questions.get(30,1));
/*print ($questions.get(30,2));
print ($questions.get(30,3));
print ($questions.get(30,4));
*/

}

\prepear(){

    $b=[];
    $num=[14,15,16,17,
    18,19,20,21,
    22,23,24,25,
    26,27,28,29];
    $select=[];
    $clickable=1;
    $turn=0;
    $miss=0;
    $time=0;
    $timeFrame=0;
    $changeSum=0;
    $qnum=0;

    /*カードをシャッフル*/
    for(let i = 0; i< 50; i++){
        r=rnd(16);
        n=i % 16;
        t=$num[n];
        $num[n]=$num[r];
        $num[r]=t;
    }
    
//カード生成
    for(let i = 0; i < 16; i++) {
        px = (i % 4) * 120 + 90;
        py = floor(i / 4) * 120 + 85;
        ri=$num[i]+1+($qnum*31);
        $b[i] = new Card{
            y=py,x=px,
            vy=py,vx=py,
            pos=i,
            omote=$questions.get(ri,0),
            ura=$questions.get(ri,1),
            myOmote=$questions.get(ri,2),
            myUra=$questions.get(ri,3),
            mySum=$questions.get(ri,4),
            mode=2,
        };
        //print($b[i].omote);
        /*
        print("${$num[i]+1}");
        print ($questions.get(ri,0));
        print ($questions.get(ri,1));
        print ($questions.get(ri,2));
        print ($questions.get(ri,3));
        print ($questions.get(ri,4));
        */

    }
}
\makeQ($ymd){
    while(true){
        $err=0;
        KeyInput();
        if($err==0){break;} 
    }
}

\KeyInput(){
    //waitInput(title="Wiki Search",mesg="Wiki単語",val=$wikiWord);
    //$text=$InputBox.getText();
    //print ($text);
    print("問題作成中。しばらくお待ちください。");
    $messLengh=$mess.length;
    $wikiSummary00="";
    $idnum=0;
    $questions00=[];
    sw=[31];
    stext=startWordSet();
    //print(stext);
    $wikiSummary00=WikiSummary(stext);//サマリーを$wikiSummaryに入れる
    $questions00.push([$idnum,-1,stext,"WellDone",$wikiSummary00]);
    //sws=selectWords(stext);
    setWords(0,stext);
    if($err==1){return;}

    //print(sws[0]);
    //print(sws[1]);

    for (i=1;i<=2;i++){
        ss=$questions00[i][2];
        setWords(i,ss);
        if($err==1){return;}
    }
    for (i=1;i<=4;i++){
        ss=$questions00[i+2][2];
        setWords(i+2,ss);
        if($err==1){return;}
    }
    for (i=1;i<=8;i++){
        ss=$questions00[i+6][2];
        setWords(i+6,ss);
        if($err==1){return;}
    }
    
    $questions00String=[];
    $qString="";
    for(lss in $questions00){
        for(ls in lss){
            $qString+=ls+",";
        }
        $questions00String.push($qString);
        $qString="";
    }
    //HtmlDisp($wikiWord,$wikiSummary+"-------------------"+$wikiLinkList+"///1/"+$SelectWord1+"///2/"+$SelectWord2);
    //HtmlDisp(stext,$questions00String);
    saveQuestion($questions00String);
}
\saveQuestion(QS){
    //let tomorrow = new Date();
    //tomorrow.setDate(tomorrow.getDate() + 1);
    //tomorrow.setDate(tomorrow.getDate());
    //let year1 = tomorrow.getFullYear();
    //let month1 = ('0' + (tomorrow.getMonth() + 1)).slice(-2);
    //let day1 = ('0' + tomorrow.getDate()).slice(-2);
    //$ymdNext = year1+''+month1+''+day1;

    $fsq=file("../static/wikiMatch"+$ymd+".csv");
    $fsq.text("");
    for(qt in QS){
        $fsq.appendText(qt+"\n\n\n");
        //print(qt);
    }
    for(i=0;i<50;i++){
        print("");
    }
    //print($ymd+"問題作成完了。プレイできます。");
}

\HtmlDisp(wword,conte){
    $summay.die();
    $content=["div",{style:"background:white;overflow-y: scroll;"},["h3", wword],["a",{href:"https://ja.wikipedia.org/wiki/"+wword},"https://ja.wikipedia.org/wiki/"+wword]];
    for(c in conte){
        $content.push(["p",{name:"summary"},c]);
    }
    $summay= new HTMLUI{content=$content, left=29,top=10, width=400, height=250};

}

\setWords(iinum,ss){
    //ss=sws[0];
    $count =0;
    while(true){
        //print("("+iinum+"/14)"+$count);
        //print(".");
        //mnum = iinum % $messLengh;
        //print($mess[mnum]);
        $count+=1;
        erra=0;
        errb=0;
        sws=selectWords(ss);
        //print(sws[0]+":"+sws[1]);

        if(sws[0]=="err"){
            sws=[];
            if ($count>5){
                $err=1;
                return;
            }
            continue;
        }
        wikiSummary0=WikiSummary(sws[0]);//サマリーを$wikiSummaryに入れる
        if(wikiSummary0 == "undefined"){
            erra=1;
            print("-");
        }

        //print(sws0[0]);
        for(q in $questions00){
            //print("??"+q[3]);
            
            /*
            if (String(q[3]).slice(0,2)==String(sws[0]).slice(0,2) 
            || String(q[4]).slice(0,2)==String(sws[0]).slice(0,2)
            || String(q[3]).slice(-1)==String(sws[0]).slice(-1) 
            || String(q[4]).slice(-1)==String(sws[0]).slice(-1))*/
            if(String(q[3])==String(sws[0])){
                erra=1;
                //("XXX"+q[3]+"/"+sws[0]);
                //print("XXX"+q[4]+"/"+sws[0]);
                print("x");

            }
        }

        wikiSummary1=WikiSummary(sws[1]);//サマリーを$wikiSummaryに入れる
        if(wikiSummary1 === "undefined"){
            errb=1;
            print("-");
        }

        //print(sws0[1]);
        for(q in $questions00){
            /*
            if (String(q[3]).slice(0,2)==String(sws[1]).slice(0,2) 
            || String(q[4]).slice(0,2)==String(sws[1]).slice(0,2)
            || String(q[3]).slice(-1)==String(sws[1]).slice(-1) 
            || String(q[4]).slice(-1)==String(sws[1]).slice(-1))
            */
            if(String(q[3])==String(sws[0])){
                errb=1;
                //print("XXX"+q[3]+"/"+sws[1]);
                //print("XXX"+q[4]+"/"+sws[1]);
                print("x");
            }
            //print("??"+q[3]);
        }
        //print(erra);
        //print(errb);
        if(erra==0 && errb== 0){break;}
        if ($count>20){
            $err=1;
            break;
        }
        //print(""+"〇"+sws[0]);
        //print(""+"〇"+sws[1]);

    }
    //print(sws[0]+":"+sws[1]);
    //print(sws[1]);
    print("o");
    $idnum+=1;
    $questions00.push([$idnum,iinum,sws[0],ss,wikiSummary0]);
    $idnum+=1;
    $questions00.push([$idnum,iinum,sws[1],ss,wikiSummary1]);
}

\selectWords(stext){
        //全リンクを取得
    wLinks=getWikiLinks(stext);
    $wikiLinks = FilterWords(wLinks);    
    if ($wikiLinks.length < 3 ){return(["err","err"]);}
    
    //リンクされている単語を２つ選ぶ
    $SelectWord1=String(RandomChoice($wikiLinks));
    c=0;    
    while(true){
        c+=1;
        $SelectWord2=String(RandomChoice($wikiLinks));
        //print($SelectWord1.slice(0,2)+":"+$SelectWord2.slice(0,2)+"/"+$SelectWord1.slice(-1)+":"+$SelectWord2.slice(-1));
        if($SelectWord1.slice(0,2) != $SelectWord2.slice(0,2) 
        && ($SelectWord1.slice(-1) != $SelectWord2.slice(-1))){
            //print("●");
            break;
        }
        if(c>20){break;}
        print("●");
    }
    return([$SelectWord1,$SelectWord2]);
}

\RandomChoice(links){
    link="";
    link = links[Math.floor(Math.random() * links.length)];
    return (link);
}

\FilterWords(wLinks){
    $wikiLinks=[];
    for(wi in wLinks){
        lstr=wi.title;
        if (/\d+/.test(lstr) == false && /識別子/.test(lstr) == false && /一覧/.test(lstr)==false && /回避/.test(lstr) == false){
            $wikiLinks.push(lstr);
        }
    }
    return($wikiLinks);
}

\startWordSet(){
    $wikiWord=getRandomWord();
    return($wikiWord);
}

\getRandomWord(){
    rword="";
    //wait(60);
    url="https://ja.wikipedia.org/w/api.php?format=json&action=query&list=random&rnnamespace=0";
    url+="&origin=*";
    var response = waitFor($.get(url));
    rword=response.query.random[0].title;
    return(rword);
}

\getWikiLinks(wword){
    plc="";
    $wikiLinks=[]; //全リンクがここに配列として入る
    while(true){
        //wait(60);
        url="https://ja.wikipedia.org/w/api.php?format=json&action=query&pllimit=500&plnamespace=0&prop=links&redirects=1&titles="+wword;
        if(plc!=""){url+="&plcontinue="+plc;}
        url+="&origin=*";
        var response = waitFor($.get(url));
        for (let id in response.query.pages) {
            Array.prototype.push.apply($wikiLinks, response.query.pages[id].links);
        }
        //user.hasOwnProperty('name')
        if(response.hasOwnProperty('continue')){
            if ( response['continue'].hasOwnProperty('plcontinue')){
                plc=response['continue'].plcontinue;
                //print(response['continue'].plcontinue);
            }
        }else{
            plc="";
        }
        if(plc==""){
            //print("end");
            break;
        }
    }
    
    return ($wikiLinks);
}

\WikiSummary(wword){　//サマリーを$wikiSummaryに入れる
    //wait(60);
    $wikiSummary00="";
    url="https://ja.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles="+wword;
    url+="&origin=*";
    var response = waitFor($.get(url));
    for (let id in response.query.pages) {
        //print(response.query.pages[id].extract);
        str00=String(response.query.pages[id].extract);
    }
    $wikiSummary00=str00.replace(/\n/g, ' / ');
    //print($wikiSummary00);
    return($wikiSummary00);
}

\setMessage(){
    $mess=[];
    $mess.push("Wikipedian神経衰弱の遊び方：");
    $mess.push("画面上の四角（ピンク）をタッチすると裏面（青）になります");
    $mess.push("２枚タッチして、裏面が同じ言葉だと、１枚消えます");
    $mess.push("最後の１枚になったら終了です");
    $mess.push("タッチした四角の言葉の簡単な説明が下の枠に表示されます");
    $mess.push("最後の言葉はWikipediaからランダムに選ばれます");
    $mess.push("ピンクの言葉は、裏面の言葉からのリンクです");
    $mess.push("裏面の言葉が同じということは、Wikipediaの");
    $mess.push("同じページの説明に使われている言葉ということです");
    $mess.push("二つの言葉が、共通のページに使われているということを");
    $mess.push("想像しながら、無駄な蘊蓄が溜まっていく教養ゲームです");
    $mess.push("終わるとTweet(x)のボタンが出てきますので、");
    $mess.push("ぜひポストしてみてください");
    $mess.push("－－－－－－－－－－－－－－－－－－－－－－－－－");
    $mess.push("毎回違う問題を作成しています。");
    $mess.push("問題の作成に数分かかります。しばらくお待ちください。");
    $mess.push("プレイ時間は５分ほどです");
    $mess.push("－－－－－－－－－－－－－－－－－－－－－－－－－");

    //$mess[]="";
    $mess.push("終わるとTweet(x)のボタンが出てきますので、");

}